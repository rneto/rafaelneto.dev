(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{510:function(e,t,s){"use strict";s.r(t);var a=s(6),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"using-npm-tasks-and-commands-in-visual-studio-2022-2019-2017-2015"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-npm-tasks-and-commands-in-visual-studio-2022-2019-2017-2015"}},[e._v("#")]),e._v(" Using npm tasks and commands in Visual Studio (2022, 2019, 2017, 2015)")]),e._v(" "),s("social-share",{staticClass:"social-share--header"}),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/blog/usar-tareas-comandos-npm-visual-studio/"}},[e._v("Espa√±ol")]),e._v(" | English")],1),e._v(" "),s("p",[e._v("As Visual Studio users we are used to some of the work being automated in the development environment, but sometimes we need to run npm tasks or commands in our project such as converting TypeScript to JavaScript.")]),e._v(" "),s("p",[e._v("To achieve the automation of these tasks we can make use of our "),s("em",[e._v("package.json")]),e._v(" file through the Visual Studio Task Runner Explorer ("),s("em",[e._v("Task Runner Explorer")]),e._v(").")]),e._v(" "),s("h2",{attrs:{id:"installation-of-npm-task-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-of-npm-task-runner"}},[e._v("#")]),e._v(" Installation of NPM Task Runner")]),e._v(" "),s("p",[e._v("The first thing to do is to install the "),s("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.NPMTaskRunner",target:"_blank",rel:"noopener noreferrer"}},[e._v("NPM Task Runner extension"),s("OutboundLink")],1),e._v(". This will display both the default "),s("em",[e._v("install")]),e._v(" and "),s("em",[e._v("update")]),e._v(" npm scripts, as well as the custom scripts that we have defined in our "),s("em",[e._v("package.json")]),e._v(" file.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/vs2019-task-runner-explorer.png",alt:"Visual Studio Task Runner Explorer"}})]),e._v(" "),s("p",[e._v("We can access the Task Runner Explorer from the context menu by right-clicking on our "),s("em",[e._v("package.json")]),e._v(" file.")]),e._v(" "),s("h2",{attrs:{id:"script-execution-and-programming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-execution-and-programming"}},[e._v("#")]),e._v(" Script execution and programming")]),e._v(" "),s("p",[e._v("It is possible to run the scripts from the explorer by double clicking on them or with the right button and the option "),s("em",[e._v("Run")]),e._v(" ("),s("em",[e._v("Run")]),e._v(").")]),e._v(" "),s("p",[e._v("It is also possible to schedule the execution of the scripts by associating them to different operations of the project (we can associate several operations to each script): "),s("em",[e._v("Before Build")]),e._v(" ("),s("em",[e._v("Before Build")]),e._v("), "),s("em",[e._v("After Build")]),e._v(" ("),s("em",[e._v("After Build")]),e._v("), "),s("em",[e._v("Clean")]),e._v(" ("),s("em",[e._v("Clean")]),e._v(") or "),s("em",[e._v("Project Open")]),e._v(" ("),s("em",[e._v("Project Open")]),e._v(").")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/vs2019-task-runner-explorer-bindings.png",alt:"Visual Studio Task Runner Explorer Bindings"}})]),e._v(" "),s("h2",{attrs:{id:"problems-with-npm-task-runner-visual-studio-and-asp-net-core"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#problems-with-npm-task-runner-visual-studio-and-asp-net-core"}},[e._v("#")]),e._v(" Problems with NPM Task Runner, Visual Studio and ASP.NET Core")]),e._v(" "),s("p",[e._v("When our "),s("em",[e._v("package.json")]),e._v(" file is located in the "),s("em",[e._v("wwwroot")]),e._v(" folder (or other folder than the root of the project), the Task Runner Explorer will not recognize it, so we will have to create a second "),s("em",[e._v("package.json")]),e._v(" in the root path of the project in which we will redefine our scripts.")]),e._v(" "),s("p",[e._v("In the new "),s("em",[e._v("package.json")]),e._v(" file we will set the script execution path based on our resources. So, in the following example we will add "),s("code",[e._v("cd wwwroot &&")]),e._v(" at the beginning of the "),s("em",[e._v("build")]),e._v(" script for packaging with "),s("RouterLink",{attrs:{to:"/en/blog/using-webpack-4-transform-package-web-aplicacion-resources/"}},[e._v("Webpack")]),e._v(" our resources located in the "),s("em",[e._v("wwwroot")]),e._v(" folder.")],1),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".,\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"build"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cd wwwroot && webpack"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("hr"),e._v(" "),s("social-share",{staticClass:"social-share--footer"})],1)}),[],!1,null,null,null);t.default=n.exports}}]);