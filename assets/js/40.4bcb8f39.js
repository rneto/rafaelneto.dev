(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{502:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"integrate-tailwind-css-into-angular-and-combine-it-with-material"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integrate-tailwind-css-into-angular-and-combine-it-with-material"}},[t._v("#")]),t._v(" Integrate Tailwind CSS into Angular and combine it with Material")]),t._v(" "),s("social-share",{staticClass:"social-share--header"}),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/blog/integrar-tailwind-css-angular-material/"}},[t._v("Espa√±ol")]),t._v(" | English")],1),t._v(" "),s("p",[t._v("If you are not familiar with Tailwind CSS yet, I recommend you taking a look at my article on "),s("RouterLink",{attrs:{to:"/en/blog/tailwind-css/"}},[t._v("What is Tailwind CSS?")]),t._v(".")],1),t._v(" "),s("p",[t._v("If you're not familiar with Material Design or Angular Material, I also suggest taking a look at this other article on "),s("RouterLink",{attrs:{to:"/en/blog/why-use-angular-material-design/"}},[t._v("Why Use Angular and Material Design?")]),t._v(", where I discuss some of the advantages of using them.")],1),t._v(" "),s("p",[t._v("We could make use of Tailwind CSS or Angular Material separately, but I believe that in this case, they complement each other perfectly. By using Angular Material, we gain access to a set of advanced components, while also benefiting from a comprehensive toolkit provided by Tailwind CSS. This combination allows us to leverage the advanced components offered by Angular Material alongside the extensive set of additional tools provided by Tailwind CSS.")]),t._v(" "),s("p",[t._v("If you haven't installed Angular Material in your application yet, I suggest following this brief guide on "),s("RouterLink",{attrs:{to:"/en/blog/install-angular-material/"}},[t._v("installing Angular Material")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"installing-tailwind-css-in-angular"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-tailwind-css-in-angular"}},[t._v("#")]),t._v(" Installing Tailwind CSS in Angular")]),t._v(" "),s("p",[t._v("From version 11.2 of Angular, "),s("strong",[t._v("native support for Tailwind CSS is now available")]),t._v(", making it very easy to start enjoying its benefits in our applications:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("First, we need to make sure we are using Angular version 11.2 or higher. We can update by running "),s("code",[t._v("ng update")]),t._v(" or following the "),s("a",{attrs:{href:"https://update.angular.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular update guide"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("If we run the "),s("code",[t._v("ng update")]),t._v(" command, we may receive alerts indicating that we need to separately update Angular CLI with "),s("code",[t._v("ng update @angular/cli")]),t._v(" and Angular Core with "),s("code",[t._v("ng update @angular/core")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("Let's keep in mind that starting from version 7 of Angular, the major versions of Angular Core and CLI are aligned, meaning that both need to be the same if we want to use Angular CLI for developing our application.")])])]),t._v(" "),s("li",[s("p",[t._v("If we simply want the latest minor version of Angular 11, we should run "),s("code",[t._v("ng update @angular/cli@11")]),t._v(" and "),s("code",[t._v("ng update @angular/core@11")]),t._v(", or equivalently "),s("code",[t._v("ng update @angular/core@11 @angular/cli@11")]),t._v(". This will update both Angular CLI and Angular Core to the latest version within the Angular 11.x series.")]),t._v(" "),s("blockquote",[s("p",[t._v("Let's remember that minor versions are fully compatible with previous minor versions, so we shouldn't have any issues when transitioning, for example, from version 11.0.0 to 11.2.4.")])])])])]),t._v(" "),s("li",[s("p",[t._v("Next, we install Tailwind CSS using the command "),s("code",[t._v("npm install -D tailwindcss")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("We create the Tailwind CSS configuration file, "),s("em",[t._v("tailwind.config.js")]),t._v(", in the root folder of our application using the command "),s("code",[t._v("npx tailwindcss init")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("We configure Tailwind CSS to remove unused styles in our application:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  purge"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/**/*.{html,ts}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("tailwind.config.js")])])]),t._v(" "),s("li",[s("p",[t._v("Finally, we import the base styles into our "),s("em",[t._v("styles.scss")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tailwindcss/base'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tailwindcss/components'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tailwindcss/utilities'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("From that point onward, we can start using Tailwind CSS in our application.")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Button"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("em",[t._v("app.component.html")])]),t._v(" "),s("h2",{attrs:{id:"incompatibilities-between-tailwind-css-and-angular-material"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#incompatibilities-between-tailwind-css-and-angular-material"}},[t._v("#")]),t._v(" Incompatibilities between Tailwind CSS and Angular Material")]),t._v(" "),s("p",[t._v("Once we have both design systems in the same application, we may encounter situations where certain styles from both systems affect each other.")]),t._v(" "),s("p",[t._v("In the case where we want to prioritize Tailwind CSS styles, we have the option to establish that the properties of its classes take precedence by making the following adjustment in the "),s("em",[t._v("tailwind.config.js")]),t._v(" file created in the root folder of our application:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  important"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("tailwind.config.js")])]),t._v(" "),s("p",[t._v("On the contrary, if we want to prioritize Angular Material classes, we should rewrite the styles of Tailwind CSS that we don't want to be affected or even use their own classes to "),s("em",[t._v("protect")]),t._v(" the styles of Angular Material components.")]),t._v(" "),s("p",[t._v("This can happen, for example, with buttons, where the base class of Tailwind CSS always adds an outline to them when they receive focus:")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("button:focus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("outline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px dotted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("outline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px auto -webkit-focus-ring-color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("So, we can rewrite that style in our "),s("em",[t._v("styles.scss")]),t._v(" file by setting the desired value:")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("button:focus ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("outline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("styles.scss")])]),t._v(" "),s("p",[t._v("Or even using a pre-defined class from Tailwind:")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("button:focus ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @apply outline-none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("styles.scss")])]),t._v(" "),s("p",[t._v("There is also the possibility of using a custom Tailwind CSS class in our control to avoid that effect on our Angular Material button:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mat-button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("focus:outline-none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Basic"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("And finally, perhaps the most interesting approach to avoid compatibility issues between both systems (and likely the most suitable for existing projects or those where we want to control the base classes) is to completely disable the "),s("em",[t._v("preflight")]),t._v(" styles (which are the styles created to normalize inconsistencies across browsers) of Tailwind CSS with the following modification in the "),s("em",[t._v("tailwind.config.js")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  corePlugins"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    preflight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("tailwind.config.js")])]),t._v(" "),s("hr"),t._v(" "),s("social-share",{staticClass:"social-share--footer"})],1)}),[],!1,null,null,null);a.default=n.exports}}]);